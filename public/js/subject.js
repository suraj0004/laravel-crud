/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/subject.js":
/*!*********************************!*\
  !*** ./resources/js/subject.js ***!
  \*********************************/
/***/ (() => {

eval("var edit_id = null; // Fetch subject listing\n\nvar subject_list = $(\"#subject_list\").DataTable({\n  processing: true,\n  serverSide: true,\n  ajax: {\n    url: $(\"#subject_list\").attr(\"data-route\"),\n    dataType: \"json\",\n    type: \"POST\",\n    headers: {\n      \"X-CSRF-TOKEN\": $('meta[name=\"csrf-token\"]').attr(\"content\")\n    }\n  },\n  columns: [{\n    bSortable: false,\n    data: \"id\"\n  }, {\n    data: \"title\"\n  }, {\n    data: \"name\"\n  }, {\n    data: \"description\"\n  }, {\n    data: \"options\",\n    bSortable: false,\n    mRender: function mRender(data, type, row) {\n      return \"\\n                <div class=\\\"d-flex\\\">\\n                    <button type=\\\"button\\\" onClick=\\\"viewSubject(\".concat(data, \")\\\" class=\\\"btn btn-success m-1 \\\">\\n                        <i class=\\\"fas fa-eye \\\"></i>\\n                    </button>\\n                    <button type=\\\"button\\\" onClick=\\\"showEditSubjectForm(\").concat(data, \")\\\" class=\\\"btn btn-info m-1 \\\">\\n                        <i class=\\\"fas fa-edit \\\"></i>\\n                    </button>\\n                    <button type=\\\"button\\\" onClick=\\\"deleteSubject(\").concat(data, \")\\\" class=\\\"btn btn-danger m-1\\\">\\n                        <i class=\\\"fas fa-trash \\\"></i>\\n                    </button>\\n                </div>\\n                \");\n    }\n  }]\n});\n\nfunction successAlert(message) {\n  swal({\n    position: \"center\",\n    icon: \"success\",\n    title: message,\n    showConfirmButton: false,\n    timer: 2000,\n    buttons: false\n  });\n}\n\nfunction errorAlert(message) {\n  swal({\n    position: \"center\",\n    icon: \"error\",\n    title: message,\n    showConfirmButton: false,\n    timer: 3000,\n    buttons: false\n  });\n}\n\n$(document).ready(function () {\n  window.deleteSubject = function (id) {\n    swal({\n      title: \"Are you sure?\",\n      text: \"* Are you sure you want to delete this subject\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\"\n    }).then(function (result) {\n      if (result) {\n        deleteClub(id);\n      }\n    });\n  };\n\n  window.viewSubject = function (id) {\n    $(\"#modalViewSubject\").modal(\"show\");\n    $(\"#subject_info_loader\").show();\n    $(\"#subject_info_table\").hide();\n    $.ajax({\n      url: $(\"#subject_list\").attr(\"get-subject-route\").replace(\":id\", id),\n      type: \"GET\",\n      dataType: \"json\",\n      success: function success(response) {\n        if (response.success && response.data) {\n          $(\"#subject_title\").text(response.data.title);\n          $(\"#subject_name\").text(response.data.name);\n          $(\"#subject_description\").text(response.data.description);\n        } else {\n          errorAlert(\"Opps! Something went wrong\");\n        }\n\n        $(\"#subject_info_loader\").hide();\n        $(\"#subject_info_table\").show();\n      },\n      error: function error(response) {\n        errorAlert(\"Opps! Something went wrong\");\n        $(\"#subject_info_loader\").hide();\n        $(\"#subject_info_table\").show();\n      }\n    });\n  };\n\n  window.showEditSubjectForm = function (id) {\n    $(\"#modalEditSubjectForm\").modal(\"show\");\n    $(\"#edit_subject_loader\").show();\n    $(\"#edit_subject_submit_btn\").hide();\n    $(\"#edit_info_response\").hide();\n    $.ajax({\n      url: $(\"#subject_list\").attr(\"get-subject-route\").replace(\":id\", id),\n      type: \"GET\",\n      dataType: \"json\",\n      success: function success(response) {\n        if (response.success && response.data) {\n          $(\"#edit_title\").val(response.data.title);\n          $(\"#edit_name\").val(response.data.name);\n          $(\"#edit_description\").val(response.data.description);\n        } else {\n          errorAlert(\"Opps! Something went wrong\");\n        }\n\n        $(\"#edit_subject_loader\").hide();\n        $(\"#edit_subject_submit_btn\").show();\n        $(\"#edit_info_response\").show();\n        edit_id = id;\n      },\n      error: function error(response) {\n        errorAlert(\"Opps! Something went wrong\");\n        $(\"#edit_subject_loader\").hide();\n        $(\"#edit_subject_submit_btn\").show();\n        $(\"#edit_info_response\").show();\n      }\n    });\n  };\n\n  function deleteClub(id) {\n    $.ajax({\n      url: $(\"#subject_list\").attr(\"delete-route\").replace(\":id\", id),\n      type: \"DELETE\",\n      dataType: \"json\",\n      headers: {\n        \"X-CSRF-TOKEN\": $('meta[name=\"csrf-token\"]').attr(\"content\")\n      },\n      success: function success(response) {\n        successAlert(response.message);\n        subject_list.ajax.reload(null, false);\n      },\n      error: function error(response) {\n        errorAlert(response.responseJSON.message);\n      }\n    });\n  }\n}); // Creating new Subject\n\n$(\"#add_subject_loader\").hide();\n$(\"#add_subject\").submit(function (e) {\n  e.preventDefault();\n  $(\"#add_subject_btn\").prop(\"disabled\", true);\n  $(\"#add_subject_btn\").hide();\n  $(\"#add_subject_loader\").show();\n  $.ajax({\n    url: $(this).attr(\"action\"),\n    headers: {\n      \"X-CSRF-TOKEN\": $('meta[name=\"csrf-token\"]').attr(\"content\")\n    },\n    type: \"post\",\n    data: $(\"#add_subject\").serialize(),\n    success: function success(response) {\n      $(\"#modalAddSubjectForm\").modal(\"hide\");\n      $(\"#add_subject\").trigger(\"reset\");\n      subject_list.ajax.reload(null, false);\n      successAlert(response.message);\n      $(\"#add_subject_btn\").prop(\"disabled\", false);\n      $(\"#add_subject_btn\").show();\n      $(\"#add_subject_loader\").hide();\n    },\n    error: function error(response) {\n      $(\"#add_subject_btn\").prop(\"disabled\", false);\n      $(\"#add_subject_btn\").show();\n      $(\"#add_subject_loader\").hide();\n      errorAlert(response.responseJSON.message);\n    }\n  });\n}); // Update subject\n\n$(\"#edit_subject_form\").submit(function (e) {\n  e.preventDefault();\n  $(\"#edit_subject_submit_btn\").prop(\"disabled\", true);\n  $(\"#edit_subject_submit_btn\").hide();\n  $(\"#edit_subject_loader\").show();\n  $.ajax({\n    url: $(this).attr(\"action\").replace(\":id\", edit_id),\n    headers: {\n      \"X-CSRF-TOKEN\": $('meta[name=\"csrf-token\"]').attr(\"content\")\n    },\n    type: \"post\",\n    data: $(\"#edit_subject_form\").serialize(),\n    success: function success(response) {\n      $(\"#modalEditSubjectForm\").modal(\"hide\");\n      $(\"#edit_subject_form\").trigger(\"reset\");\n      subject_list.ajax.reload(null, false);\n      successAlert(response.message);\n      $(\"#edit_subject_submit_btn\").prop(\"disabled\", false);\n      $(\"#edit_subject_submit_btn\").show();\n      $(\"#edit_subject_loader\").hide();\n    },\n    error: function error(response) {\n      $(\"#edit_subject_submit_btn\").prop(\"disabled\", false);\n      $(\"#edit_subject_submit_btn\").show();\n      $(\"#edit_subject_loader\").hide();\n      errorAlert(response.responseJSON.message);\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/subject.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/subject.js"]();
/******/ 	
/******/ })()
;